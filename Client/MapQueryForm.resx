<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_Tree.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_Tree.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACm
        BwAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCBwAAf8BfwH/AX8BvQF3Ad4BewH/AX8B/wF/KgABSgEpAbUBVgG1AVYBtQFW
        AbUBVgG1AVYBtQFWAbUBVgG1AVYBtQFWAbUBVgG1AVYBtQFWAbUBVgG1AVYBSgEpJgAB/wF/Af8BfwHe
        AXsBnAFzAb0BdwGcAXMBnAFzAd4BewH/AX8KAAH/AX8B/wF/GgABlAFSAf8BfxgAAf8BfwGUAVIkAAH/
        AX8B/wF/Ab0BdwG9AXcB3gF7Af8BfwHeAXsBvQF3AZwBcwHeAXsB/wF/Af8BfwYAAf8BfwHWAVoB3gF7
        GAABlAFSAf8BfxgAAf8BfwGUAVIkAAH/AX8B3gF7AZwBcwG9AXcB/wF/Af8BfwH/AX8B/wF/Ab0BdwG9
        AXcB3gF7Af8BfwgAAd4BewGUAVIB3gF7FgABlAFSAf8BfwIAAf8BfwH/AX8B3gF7Af8Bfw4AAf8BfwGU
        AVIiAAH/AX8B3gF7AZwBcwHeAXsB/wF/BgAB/wF/Af8BfwG9AXcBvQF3Af8BfwH/AX8IAAHeAXsBlAFS
        Ad4BexQAATEBRgGcAXMBGAFjAbUBVgExAUYBUgFKAb0Bdw4AAf8BfwGUAVIiAAH/AX8BvQF3AZwBcwH/
        AX8B/wF/BgAB/wF/Af8BfwHeAXsBvQF3Ab0BdwH/AX8KAAHeAXsBlAFSAd4BexIAAWsBLQGUAVIBWgFr
        AZwBcwG9AXcBewFvAZQBUgH/AX8MAAH/AX8BlAFSIAAB/wF/Ab0BdwG9AXcB3gF7Af8BfwwAAf8BfwHe
        AXsBnAFzAd4BewH/AX8KAAHeAXsBlAFSAd4BexAAATEBRgHeAXsB3gF7Ad4BewHeAXsB3gF7AfcBXgH3
        AV4B/wF/BAAB/wF/Ab0BdwHeAXsB/wF/AZQBUiAAAf8BfwGdAXMBvQF3Af8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwGcAXMBvQF3Af8BfwwAAd4BewGUAVIB3gF7DgABEAFCAZwBcwEY
        AWMBnAFzAd4BewHeAXsBvQF3AVIBSgF7AW8B3gF7AVoBawGUAVIBlAFSARABQgGcAnMBTiAAAb0BdwG9
        AXcB3gF7Af8BfwH/AX8B3gF7Ab0BdwG9AXcBvQF3Ad4BewH/AX8B/wF/Af8BfwG9AXcBvQF3Ad4Bew4A
        Ad4BewGUAVIB3gF7DAABzgE5AZQBUgEYAWMBUgFKAVoBawHeAXsB3gF7AZwBcwEQAUIBlAFSAfcBXgG9
        AXcB3gF7AZwBcwFSAUoBKQElIAABnAFzAb0BdwH/AX8B/wF/Ad4BewG9AXcBnAFzAd4BewG9AXcBvQFz
        Ab0BdwH/AX8B/wF/Ad4BewG9AXcBvQF3EAAB3gF7AZQBUgHeAXsKAAH/AX8B/wF/AgAB/wF/AdYBWgH3
        AV4BvQF3Ad4BewG9AXcBnAFzAZwBcwE5AWcBnAFzAd4BewG9AXcBawEtIAABewFvAb0BdwH/AX8B/wF/
        Ab0BdwG9AXcB3gF7Af8BfwH/AX8B3gF7AZwBcwHeAXsB/wF/Af8BfwG9AXcBvQF3EgAB3gF7AZQBUgHe
        AXsQAAH/AX8BewFvAZQBUgEYAWMB9wFeATEBRgHWAVoBGAFjAXMBTgGcAXMB3gF7ATEBRiAAAZwBcwG9
        AXcB3gF7Af8BfwHeAXsBvQF3Ab0BdwHeAXsB3gF7Ab0BdwG9AXcB/wF/Af8BfwHeAXsBvQF3Ab0BdxQA
        Ad4BewGUAVIB3gF7EgAB3gF7ATkBZwGcAXMB/wF/Af8BfwIAAXsBbwGUAVIBvQF3Ae8BPSAAAd4BewGc
        AXMBvQF3Af8BfwH/AX8B3gF7Ab0BdwGcAXMBnAFzAb0BdwH/AX8B/wF/Ad4BewGcAXMBvQF3Ad4BexYA
        Ad4BewGUAVIB3gF7HAAB/wF/ATkBZwHWAVoBEAFCIAAB/wF/Ad4BewGdAXMBvQF3Ad4BewH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwHeAXsBvQF3AZwBcwHeAXsB/wF/GAAB3gF7AdYBWgH/AX8cAAH/AX8B9wFe
        AecBHCIAAf8BfwH/AX8BvQF3AZwBcwGcAXMBvQF3Ab4BdwG9AXcBvQF3AZwBcwGcAXMBvQF3Af8BfwH/
        AX8cAAH/AX8B/wF/HgAB/wF/AZQBUiYAAf8BfwH/AX8B3gF7Ab0BdwG9AXMBvQF3Ab0BdwHeAXsB/wF/
        RgAB/wF/IAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAfgBHwL/BAAB4AEP
        AZ8B/wE/AfwCAAHAAQMBjwH/AT8B/AIAAcABAwHHAf8BIQH8AgABgwGBAeMB/wEBAfwCAAGDAYEB8QH/
        AQAB/AIAAQcB4AH4Af8BAAFgBAAB/AF/BgAB/gE/BgAB/wEfASAFAAH/AY8B8AUAAf8BxwH8ARAEAAH/
        AeMB/wHwBAAB/wHxAf8B+AIAAYABAQH/AfkB/wH8AgAB4AEPA/8B/gIACw==
</value>
  </data>
</root>